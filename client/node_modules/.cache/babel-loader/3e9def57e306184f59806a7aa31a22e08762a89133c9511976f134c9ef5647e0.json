{"ast":null,"code":"// Preloads saved weather data from local storage, if available\nlet getWeatherFromLocal = () => {\n  let value = localStorage.getItem('CurrentWeatherData');\n  return JSON.parse(value) || \"\";\n};\nconst weather = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getWeatherFromLocal();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"SAVE_WEATHER_DATA\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default weather;","map":{"version":3,"names":["getWeatherFromLocal","value","localStorage","getItem","JSON","parse","weather","state","arguments","length","undefined","action","type","payload"],"sources":["C:/Users/Yoga/Desktop/main/projects/mern-weather/client/src/reducers/weather.js"],"sourcesContent":["// Preloads saved weather data from local storage, if available\r\nlet getWeatherFromLocal = () => {\r\n    let value = localStorage.getItem('CurrentWeatherData');\r\n    return JSON.parse(value) || \"\";\r\n}\r\n\r\nconst weather = (state = getWeatherFromLocal(), action) => {\r\n    switch (action.type) {\r\n        case \"SAVE_WEATHER_DATA\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default weather;"],"mappings":"AAAA;AACA,IAAIA,mBAAmB,GAAGA,CAAA,KAAM;EAC5B,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;EACtD,OAAOC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,IAAI,EAAE;AAClC,CAAC;AAED,MAAMK,OAAO,GAAG,SAAAA,CAAA,EAA2C;EAAA,IAA1CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGR,mBAAmB,EAAE;EAAA,IAAEW,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,mBAAmB;MACpB,OAAOD,MAAM,CAACE,OAAO;IACzB;MACI,OAAON,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}