{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yoga\\\\Desktop\\\\main\\\\projects\\\\mern-weather\\\\client\\\\src\\\\Components\\\\WeatherHistoryPanel.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass WeatherHistoryPanel extends Component {\n  constructor() {\n    super(...arguments);\n    /*  state = {\r\n         history: [\r\n             {\r\n                 \"_id\": 1,\r\n                 \"timestamp\": \"7/27/2020, 11:10:33 PM\",\r\n                 \"city\": \"Fort Worth\",\r\n                 \"zipcode\": \"76108\",\r\n                 \"temperature\": 82.13,\r\n                 \"description\": \"clear sky\"\r\n             },\r\n             {\r\n                 \"_id\": 2,\r\n                 \"timestamp\": \"7/27/2020, 11:10:36 PM\",\r\n                 \"city\": \"Redmond\",\r\n                 \"zipcode\": \"98052\",\r\n                 \"temperature\": 73.67,\r\n                 \"description\": \"clear sky\"\r\n             }\r\n         ]\r\n     } */\n    this.createHistoryList = () => {\n      let historyComponents = [];\n      let historyList = this.props.history;\n\n      // Listing history of zip code submissions in \"most recent\" order\n      for (let i = historyList.length - 1; i >= 0; i--) {\n        let infoCard = this.getInfoListItem(historyList[i]);\n        historyComponents.push(infoCard);\n      }\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: historyComponents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    };\n    this.getInfoListItem = info => {\n      return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: info.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 50\n        }, this), \" - [\", info.city, \", \", info.zipcode, \"]:[\", info.temperature, \", \", info.description, \"]\"]\n      }, info.timestamp, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"weather-history-panel\",\n      children: !!this.props.history.length ? this.createHistoryList() : \"No History!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    history: state.history\n  };\n};\nexport default connect(mapStateToProps)(WeatherHistoryPanel);\nexport { WeatherHistoryPanel };","map":{"version":3,"names":["React","Component","Card","ListGroup","connect","jsxDEV","_jsxDEV","WeatherHistoryPanel","constructor","arguments","createHistoryList","historyComponents","historyList","props","history","i","length","infoCard","getInfoListItem","push","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","info","Item","timestamp","city","zipcode","temperature","description","render","className","mapStateToProps","state"],"sources":["C:/Users/Yoga/Desktop/main/projects/mern-weather/client/src/Components/WeatherHistoryPanel.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {Card, ListGroup} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass WeatherHistoryPanel extends Component {\r\n   /*  state = {\r\n        history: [\r\n            {\r\n                \"_id\": 1,\r\n                \"timestamp\": \"7/27/2020, 11:10:33 PM\",\r\n                \"city\": \"Fort Worth\",\r\n                \"zipcode\": \"76108\",\r\n                \"temperature\": 82.13,\r\n                \"description\": \"clear sky\"\r\n            },\r\n            {\r\n                \"_id\": 2,\r\n                \"timestamp\": \"7/27/2020, 11:10:36 PM\",\r\n                \"city\": \"Redmond\",\r\n                \"zipcode\": \"98052\",\r\n                \"temperature\": 73.67,\r\n                \"description\": \"clear sky\"\r\n            }\r\n        ]\r\n    } */\r\n\r\n    createHistoryList = () => {\r\n        let historyComponents = [];\r\n        let historyList = this.props.history;\r\n\r\n        // Listing history of zip code submissions in \"most recent\" order\r\n        for (let i = historyList.length - 1; i >= 0; i--) {\r\n            let infoCard = this.getInfoListItem(historyList[i]);\r\n            historyComponents.push(infoCard);\r\n        }\r\n    \r\n\r\n        return (\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    {historyComponents}\r\n                </ListGroup>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    getInfoListItem = (info) => {\r\n        return (\r\n            <ListGroup.Item key={info.timestamp}><b>{info.timestamp}</b> -\r\n                [{info.city}, {info.zipcode}]:[{info.temperature}, {info.description}]</ListGroup.Item>\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"weather-history-panel\">\r\n                {!!this.props.history.length ? this.createHistoryList() : \"No History!\"}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        history: state.history\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(WeatherHistoryPanel);\r\n\r\n\r\nexport {WeatherHistoryPanel};"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,IAAI,EAAEC,SAAS,QAAO,iBAAiB;AAC/C,SAAQC,OAAO,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,mBAAmB,SAASN,SAAS,CAAC;EAAAO,YAAA;IAAA,SAAAC,SAAA;IACzC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAnBG,KAqBCC,iBAAiB,GAAG,MAAM;MACtB,IAAIC,iBAAiB,GAAG,EAAE;MAC1B,IAAIC,WAAW,GAAG,IAAI,CAACC,KAAK,CAACC,OAAO;;MAEpC;MACA,KAAK,IAAIC,CAAC,GAAGH,WAAW,CAACI,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC9C,IAAIE,QAAQ,GAAG,IAAI,CAACC,eAAe,CAACN,WAAW,CAACG,CAAC,CAAC,CAAC;QACnDJ,iBAAiB,CAACQ,IAAI,CAACF,QAAQ,CAAC;MACpC;MAGA,oBACIX,OAAA,CAACJ,IAAI;QAAAkB,QAAA,eACDd,OAAA,CAACH,SAAS;UAACkB,OAAO,EAAC,OAAO;UAAAD,QAAA,EACrBT;QAAiB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACV;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT;IAEf,CAAC;IAAA,KAEDP,eAAe,GAAIQ,IAAI,IAAK;MACxB,oBACIpB,OAAA,CAACH,SAAS,CAACwB,IAAI;QAAAP,QAAA,gBAAsBd,OAAA;UAAAc,QAAA,EAAIM,IAAI,CAACE;QAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,QACvD,EAACC,IAAI,CAACG,IAAI,EAAC,IAAE,EAACH,IAAI,CAACI,OAAO,EAAC,KAAG,EAACJ,IAAI,CAACK,WAAW,EAAC,IAAE,EAACL,IAAI,CAACM,WAAW,EAAC,GAAC;MAAA,GADrDN,IAAI,CAACE,SAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACwD;IAEnG,CAAC;EAAA;EACDQ,MAAMA,CAAA,EAAG;IACL,oBACI3B,OAAA;MAAS4B,SAAS,EAAC,uBAAuB;MAAAd,QAAA,EACrC,CAAC,CAAC,IAAI,CAACP,KAAK,CAACC,OAAO,CAACE,MAAM,GAAG,IAAI,CAACN,iBAAiB,EAAE,GAAG;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjE;EAElB;AACJ;AAEA,MAAMU,eAAe,GAAIC,KAAK,IAAK;EAC/B,OAAO;IACHtB,OAAO,EAAEsB,KAAK,CAACtB;EACnB,CAAC;AACL,CAAC;AAED,eAAeV,OAAO,CAAC+B,eAAe,CAAC,CAAC5B,mBAAmB,CAAC;AAG5D,SAAQA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}