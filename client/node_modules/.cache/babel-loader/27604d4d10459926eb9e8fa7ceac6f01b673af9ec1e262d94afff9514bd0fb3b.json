{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yoga\\\\Desktop\\\\main\\\\projects\\\\mern-weather\\\\client\\\\src\\\\Components\\\\WeatherForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Row, Col, ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { saveZipCode, saveWeatherData, saveTemperature, updateHistory } from \"../actions\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass WeatherForm extends Component {\n  constructor() {\n    super(...arguments);\n    // default state values\n    this.state = {\n      tempMetric: \"imperial\",\n      zipCodeInput: \"98052\"\n    };\n    // Refreshes the current weather data for the most recent zip code, if it exists\n    this.refreshSavedWeather = () => {\n      if (localStorage.getItem(\"zipCode\")) {\n        axios.post(\"/api/weather\", {\n          zipCode: localStorage.getItem(\"zipCode\"),\n          tempMetric: localStorage.getItem(\"tempMetric\")\n        }).then(d => {\n          this.props.saveWeatherData(d.data);\n          // localStorage.setItem(\"CurrentWeatherData\", JSON.stringify(d.data));\n        });\n      }\n    };\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.saveFormData = event => {\n      event.preventDefault();\n\n      // Gets the weather data from the weather api and returns it to save into local storage and redux store.\n      axios.post(\"/api/weather\", {\n        zipCode: this.state.zipCodeInput,\n        tempMetric: this.state.tempMetric\n      }).then(response => {\n        let weatherData = response.data;\n        this.saveToStore(weatherData);\n        this.saveToLocalStorage(weatherData);\n      });\n    };\n    // Save data from form to local storage\n    this.saveToLocalStorage = weatherData => {\n      localStorage.setItem(\"zipCode\", this.state.zipCodeInput);\n      localStorage.setItem(\"tempMetric\", this.state.tempMetric);\n      localStorage.setItem(\"CurrentWeatherData\", JSON.stringify(weatherData));\n      localStorage.setItem(\"WeatherHistory\", JSON.stringify(this.props.history));\n    };\n    this.saveToMongo = event => {\n      axios.post(\"/api/weatherMongo\", {\n        zipCode: this.state.zipCodeInput,\n        tempMetric: this.state.tempMetric\n      }).then(response => {\n        let weatherData = response.data;\n\n        // do whatever you want with the weather data\n      });\n    };\n  }\n  componentDidMount() {\n    this.refreshSavedWeather();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      className: \"weather-form\",\n      onSubmit: this.saveToMongo,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        align: \"center\",\n        className: \"zipCode\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Zip Code: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"zipCodeInput\",\n            type: \"text\",\n            placeholder: \"Enter your zip code\",\n            onChange: this.onChange,\n            className: \"zipCodeInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            toggle: \"true\",\n            children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n              type: \"radio\",\n              variant: \"secondary\",\n              name: \"tempMetric\",\n              value: \"metric\",\n              checked: this.state.tempMetric === \"metric\",\n              onChange: this.onChange,\n              children: \"Celsius (\\xB0C)\"\n            }, \"C\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              type: \"radio\",\n              variant: \"secondary\",\n              name: \"tempMetric\",\n              value: \"imperial\",\n              checked: this.state.tempMetric === \"imperial\",\n              onChange: this.onChange,\n              children: \"Fahrenheit (\\xB0F)\"\n            }, \"F\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"save-btn\",\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default WeatherForm;","map":{"version":3,"names":["React","Component","Form","Button","Row","Col","ButtonGroup","ToggleButton","connect","saveZipCode","saveWeatherData","saveTemperature","updateHistory","axios","jsxDEV","_jsxDEV","WeatherForm","constructor","arguments","state","tempMetric","zipCodeInput","refreshSavedWeather","localStorage","getItem","post","zipCode","then","d","props","data","onChange","e","setState","target","name","value","saveFormData","event","preventDefault","response","weatherData","saveToStore","saveToLocalStorage","setItem","JSON","stringify","history","saveToMongo","componentDidMount","render","className","onSubmit","children","type","justify","align","fileName","_jsxFileName","lineNumber","columnNumber","Control","placeholder","span","toggle","variant","checked"],"sources":["C:/Users/Yoga/Desktop/main/projects/mern-weather/client/src/Components/WeatherForm.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {Form, Button, Row, Col, ButtonGroup, ToggleButton} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {saveZipCode, saveWeatherData, saveTemperature, updateHistory} from \"../actions\";\r\n\r\nimport axios from 'axios';\r\n\r\nclass WeatherForm extends Component {\r\n    // default state values\r\n    state = {\r\n        tempMetric: \"imperial\",\r\n        zipCodeInput: \"98052\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshSavedWeather();\r\n    }\r\n\r\n    // Refreshes the current weather data for the most recent zip code, if it exists\r\n    refreshSavedWeather = () => {\r\n        if (localStorage.getItem(\"zipCode\")) {\r\n            axios.post(\"/api/weather\", {\r\n                zipCode: localStorage.getItem(\"zipCode\"),\r\n                tempMetric: localStorage.getItem(\"tempMetric\")\r\n            }).then(d => {\r\n                this.props.saveWeatherData(d.data);\r\n               // localStorage.setItem(\"CurrentWeatherData\", JSON.stringify(d.data));\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    saveFormData = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Gets the weather data from the weather api and returns it to save into local storage and redux store.\r\n        axios.post(\"/api/weather\", {\r\n            zipCode: this.state.zipCodeInput,\r\n            tempMetric: this.state.tempMetric\r\n        }).then(response => {\r\n            let weatherData = response.data;\r\n\r\n            this.saveToStore(weatherData);\r\n            this.saveToLocalStorage(weatherData);\r\n        });\r\n    }\r\n\r\n    // Save data from form to local storage\r\n    saveToLocalStorage = (weatherData) => {\r\n        localStorage.setItem(\"zipCode\", this.state.zipCodeInput);\r\n        localStorage.setItem(\"tempMetric\", this.state.tempMetric);\r\n        localStorage.setItem(\"CurrentWeatherData\", JSON.stringify(weatherData));\r\n        localStorage.setItem(\"WeatherHistory\", JSON.stringify(this.props.history));\r\n    }\r\n\r\n    saveToMongo = (event) => {\r\n        axios.post(\"/api/weatherMongo\", {\r\n            zipCode: this.state.zipCodeInput,\r\n            tempMetric: this.state.tempMetric\r\n        }).then(response => {\r\n            let weatherData = response.data;\r\n\r\n            // do whatever you want with the weather data\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form className=\"weather-form\" onSubmit={this.saveToMongo}>\r\n\r\n                <Row type=\"flex\" justify=\"center\" align=\"center\" className=\"zipCode\">\r\n                    <Col>\r\n                        <span>Zip Code: </span>\r\n                        <Form.Control name=\"zipCodeInput\"\r\n                                      type=\"text\"\r\n                                      placeholder=\"Enter your zip code\"\r\n                                      onChange={this.onChange}\r\n                                      className=\"zipCodeInput\"/>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row type=\"flex\" justify=\"center\" align=\"center\">\r\n                    <Col span={4}>\r\n                        <ButtonGroup toggle=\"true\">\r\n                            <ToggleButton\r\n                                key={\"C\"}\r\n                                type=\"radio\"\r\n                                variant=\"secondary\"\r\n                                name=\"tempMetric\"\r\n                                value={\"metric\"}\r\n                                checked={this.state.tempMetric === \"metric\"}\r\n                                onChange={this.onChange}\r\n                            >\r\n                                Celsius (°C)\r\n                            </ToggleButton>\r\n                            <ToggleButton\r\n                                key={\"F\"}\r\n                                type=\"radio\"\r\n                                variant=\"secondary\"\r\n                                name=\"tempMetric\"\r\n                                value={\"imperial\"}\r\n                                checked={this.state.tempMetric === \"imperial\"}\r\n                                onChange={this.onChange}\r\n                            >\r\n                                Fahrenheit (°F)\r\n                            </ToggleButton>\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row type=\"flex\" justify=\"center\" align=\"center\">\r\n                    <Col span={4}>\r\n                        <Button className=\"save-btn\" variant=\"primary\" type=\"submit\">\r\n                            Save\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeatherForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}